var searchIndex = JSON.parse('{\
"algorithms":{"doc":"","t":[0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,5,5,5,5,5],"n":["data_structures","search","sort","LinkedList","borrow","borrow_mut","clone","clone_into","from","get","get_first","insert_first","insert_last","into","into_iter","length","new","remove_first","remove_ith","to_owned","try_from","try_into","type_id","binary_search","linear_search","bubble_sort","insertion_sort","selection_sort"],"q":["algorithms","","","algorithms::data_structures","","","","","","","","","","","","","","","","","","","","algorithms::search","","algorithms::sort","",""],"d":["","","","Linked List with generic type","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Searches for the first occurence of an element in an …","Searches for the first occurence of an element in a list …","Sort a list using the bubble sort algorithm.","Sort a list using the insertion sort algorithm.","Sort a list using the selection sort algorithm."],"i":[0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0],"f":[0,0,0,0,[[]],[[]],[[[2,[1]]],[[2,[1]]]],[[]],[[]],[[[2,[[0,[1,3]]]],4],[[5,[[0,[1,3]]]]]],[[[2,[[0,[1,3]]]]],[[5,[[0,[1,3]]]]]],[[[2,[[0,[1,3]]]],[0,[1,3]]]],[[[2,[[0,[1,3]]]],[0,[1,3]]]],[[]],[[[2,[1]]]],0,[[],[[2,[[0,[1,3]]]]]],[[[2,[[0,[1,3]]]]],[[5,[[0,[1,3]]]]]],[[[2,[[0,[1,3]]]],4],[[5,[[0,[1,3]]]]]],[[]],[[],6],[[],6],[[],7],[[],[[5,[8]]]],[[],[[5,[8]]]],[[]],[[]],[[]]],"p":[[8,"Clone"],[3,"LinkedList"],[8,"Debug"],[15,"u64"],[4,"Option"],[4,"Result"],[3,"TypeId"],[15,"usize"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
